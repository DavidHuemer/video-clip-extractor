<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialIcons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
                    xmlns:videoVm="clr-namespace:VideoClipExtractor.Data.Videos;assembly=VideoClipExtractor.Data"
                    xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">

    <Style x:Key="IconBottom" TargetType="{x:Type materialIcons:MaterialIcon}" BasedOn="{StaticResource {x:Type materialIcons:MaterialIcon}}">
        <Setter Property="Width" Value="10"/>
        <Setter Property="Height" Value="10"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="VideoItemContainerStyle" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="VideoExtractionProgressBar" TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="materialDesign:TransitionAssist.DisableTransitions" Value="True"/>
    </Style>

    <DataTemplate x:Key="VideoExtractionTemplate" DataType="videoVm:VideoViewModel">
        <StackPanel>
            
            <!--Top Content-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Label Content="{Binding Name}"/>

                <materialIcons:MaterialIcon Grid.Row="1"
                            Kind="{Binding VideoStatus, Converter={StaticResource VideoStatusToIconConverter}}"
                            Style="{StaticResource IconBottom}"/>

                <!--TODO: The Kind of the icon should be bound to the extraction result-->
                <materialIcons:MaterialIcon x:Name="ResultIcon" 
                                            Grid.Column="1" 
                                            Grid.RowSpan="2" 
                                            Kind="Clock"
                                            Height="20"
                                            Width="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"
                                            VerticalAlignment="Center" HorizontalAlignment="Right"/>
            </Grid>

            <ProgressBar x:Name="RunningExtractionProgressBar"
                         Margin="2,8" 
                         IsIndeterminate="True"
                         Style="{StaticResource VideoExtractionProgressBar}"/>
        </StackPanel>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ExtractionResult}" Value="{x:Null}">
                <Setter TargetName="ResultIcon" Property="Kind" Value="Clock"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding ExtractionResult.Success}" Value="True">
                <Setter TargetName="ResultIcon" Property="Foreground" Value="Green"/>
                <Setter TargetName="ResultIcon" Property="Kind" Value="SuccessCircle"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding ExtractionResult.Success}" Value="False">
                <Setter TargetName="ResultIcon" Property="Foreground" Value="Red"/>
                <Setter TargetName="ResultIcon" Property="Kind" Value="AlertCircle"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsExtracting}" Value="False">
                <Setter TargetName="RunningExtractionProgressBar" Property="Visibility" Value="Hidden"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>